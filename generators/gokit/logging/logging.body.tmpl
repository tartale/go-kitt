{{- define "body"}}
{{- $method := get . "Method" }}
{{- $middlewareName := get . "MiddlewareName" }}
{{- $namedInputArgs := $method.InputArgs | autoname "input" }}
{{- $inputNameList := $namedInputArgs | names | join ", " }}
{{- $namedOutputArgs := $method.OutputArgs | autoname "output" }}
{{- $outputNameList := $namedOutputArgs | names | join ", " }}
{{- $outputStringAssignments := $namedOutputArgs | filtererrors | toStringAssignments }}
{{- $firstError := $namedOutputArgs | firsterror }}
func (mw {{$middlewareName}}) {{ $method | signature }} {

  defer func(begin time.Time) {
    {{- range $outputStringAssignments }}
    {{ . }}
    {{- end }}
		_ = mw.Logger.Log(
			"method", "{{$method.Name}}",
			"output", []string{ {{ $outputStringAssignments | names | join ", "}} },
			"took", time.Since(begin),
      {{- if $firstError }}
      "err", {{ $firstError.Name }},
      {{- end }}
		)
	}(time.Now())

	{{$outputNameList}} = mw.Next.{{$method.Name}}({{$inputNameList}})

	return
}
{{ end }}
